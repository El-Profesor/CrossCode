// Tutorial A
//
// Controls:
//    - Left key to move one step back
//    - Right key to move one step forward
//    - Up key to move animation backward
//    - Down key to move animation forward
//    - Grab control flow cursor to move
//    - Set animation speed
// Concepts
//    - Control flow panel
//    - Data panel
//    - Source code panel
//    - Color encoding for read and writes
//    - Trace and trace information
//    - Movement and effect animations

// Variable declaration
let l = [1, 2, 3]

// Trace, and partial trace
let y = l[0]
let z = l[2] + y

// Residual
y = z

// Tutorial B
//
// Controls:
//    - Shift click to get break down a step
// Concepts
//    - Multiple levels of operational detail
//    - Specialized representations for if statement

let list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
let n = list.length

if (list[0] < list[n - 1]) {
  // Swap list[0] and list[n - 1]
  let temp = list[0]
  list[0] = list[n - 1]
  list[n - 1] = temp
}

// Tutorial C
//
// Controls:
//    - Shift click into a function call
//    - For expanding / collapsing
//    - Minimize / maximize
//    - Progressive closure enable
//    - Expanding / collapsing abbreviations
// Concepts
//    - Aggregation over breadth
//    - Abbreviations
//    - Specialized representations for For Statement
//    - Data state scope
//    - Detailed / less detailed representations
//    - Progressive closure

function avg(l) {
    let s = 0
    let n = l.length

    for (let i = 0; i < n; i = i + 1) {
        s = s + l[i]
    }

    return s / n
}

let lst = [1, 5, 6, 10]
let k = avg(lst)

// Tutorial D
//
// Controls:
//    - Progressive closure button
//    - Progressive disclosure button
//    - Selection from source code
// Concepts
//    - Aggregation over depth

function fact(x) {
    if (x > 1) {
        return x * fact(x - 1)
    }

    return 1
}


function fact2(x) {
    let r = 5
    let z = r + 1
    let y = z - r
    y = y - r
    r = y * y
    
    if (x > 1) {
        return x * fact(x - 1)
    }

    return 1
}

let n = 5
let y = fact(n)