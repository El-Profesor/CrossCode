import { Editor } from '../../editor/Editor'
import { Executor } from '../../executor/Executor'
import { getLeafSteps } from '../../utilities/action'
import { createElement } from '../../utilities/dom'
import { remap } from '../../utilities/math'
import { EnvironmentRenderer } from './Environment/EnvironmentRenderer'
import { View } from './View'

/* ------------------------------------------------------ */
/*                      View Renderer                     */
/* ------------------------------------------------------ */
export class ViewRenderer {
    // Overall container
    element: HTMLElement

    // Corresponding View
    view: View

    // SVG overlay
    svg: SVGElement

    // Stack container
    renderers: EnvironmentRenderer[] = []

    // Each container organizes a renderer, TODO: why do I need a container?
    containers: HTMLElement[] = []

    /* ----------------------- Create ----------------------- */
    constructor(view: View) {
        this.view = view
        this.create()
    }

    create() {
        this.element = createElement('div', 'view', document.body)
        const margin = Editor.instance.getMaxWidth() + 300
        this.element.style.left = `${margin}px`

        this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')
        this.element.appendChild(this.svg)
        this.svg.classList.add('environment-svg')
    }

    createEnvironmentRenderer() {
        const renderer = new EnvironmentRenderer()
        return renderer
    }

    /* --------------------- Update time -------------------- */
    update() {
        const mapping = Executor.instance.visualization.mapping
        const time = mapping.time

        let candidate = 0
        let amount = 0

        /* --------------- Find the closest frame --------------- */
        const steps = getLeafSteps(Executor.instance.visualization.program.steps)

        for (let i = steps.length - 1; i >= 0; i--) {
            const proxy = mapping.getProxyOfAction(steps[i])
            const start = proxy.timeOffset
            const end = start + proxy.element.getBoundingClientRect().height
            candidate = i

            if (time >= start) {
                amount = Math.min(remap(time, start, end, 0, 1), 1)
                if (time <= end) {
                    proxy.action.renderer.element.classList.add('is-playing')
                    proxy.element.classList.add('is-playing')
                }
                break
            }
        }

        /* ------------------- Assign classes ------------------- */
        for (let i = 0; i < steps.length; i++) {
            const proxy = mapping.getProxyOfAction(steps[i])
            if (i != candidate) {
                proxy.action.renderer.element.classList.remove('is-playing')
                proxy.element.classList.remove('is-playing')
            }
            if (i < candidate) {
                proxy.action.renderer.element.classList.add('has-played')
                proxy.element.classList.add('has-played')
            } else {
                proxy.action.renderer.element.classList.remove('has-played')
                proxy.element.classList.remove('has-played')
            }
        }

        if (candidate == -1) {
            console.warn('No candidate frame found.')
            return
        }

        /* --------------- Show the current frame --------------- */

        /* -------------------- Apply breaks -------------------- */
        // for (let i = 0; i < mapping.breaks.length; i++) {
        //     const breakpoint = mapping.breaks[i]
        //     const renderer = this.createEnvironmentRenderer()
        //     this.renderers.push(this.createEnvironmentRenderer())
        // }

        /* -------------------- Apply trails -------------------- */
        for (let i = 0; i < this.view.trails.length; i++) {
            const trails = this.view.trails[i]
            let renderer = this.renderers[0] // TODO

            if (i < candidate) {
                trails.updateTime(1, renderer)
            } else if (i > candidate) {
                // trails.updateTime(0, this.renderer)
            } else {
                trails.updateTime(amount, renderer)
            }
        }

        for (let i = 0; i < this.view.trails.length; i++) {
            const trails = this.view.trails[i]
            let renderer = this.renderers[0] // TODO

            if (i < candidate) {
                trails.postUpdate(1, renderer)
            } else if (i > candidate) {
                trails.postUpdate(0, renderer)
            } else {
                trails.postUpdate(amount, renderer)
            }
        }
    }

    updateTime() {
        this.update()
    }

    /**
     * Sync the frames with the state.
     * TODO: Currently destroys and re-instantiates - can be incremental.
     */
    syncFrames() {
        /* ------------------ Destroy existing ------------------ */
        this.renderers.forEach((renderer) => renderer?.destroy())
        this.renderers = []
        this.containers.forEach((container) => container.remove())
        this.containers = []

        /* --------------------- Create new --------------------- */
        const breaks = Executor.instance.visualization.mapping.breaks ?? []

        // Create a renderer for each break + 1
        for (let i = 0; i < breaks.length + 1; i++) {
            const renderer = this.createEnvironmentRenderer()
            this.renderers.push(renderer)
        }

        // Organize them into containers
        for (let i = 0; i < breaks.length + 1; i++) {
            const container = createElement('div', 'environment-container', this.element)
            container.appendChild(this.renderers[i].element)
        }
    }

    /* ----------------------- Destroy ---------------------- */
    destroy() {
        this.renderers.forEach((renderer) => renderer?.destroy())
        this.renderers = null

        this.element.remove()
        this.element = null
    }
}




[AN(1)_ReferenceFunction \[4\]]

[AN(1)_BindFunctionNew \[5\]]

[AN(160)_Copy \[6\]]

[AN(137)_MemberFunction \[7\]]

[AN(148)_EvaluatedData \[8\]]

[AN(142)_Copy \[9\]]

[AN(114)_MemberFunction \[10\]]

[AN(125)_EvaluatedData \[11\]]

[AN(119)_Copy \[12\]]

[AN(91)_MemberFunction \[13\]]

[AN(102)_EvaluatedData \[14\]]

[AN(96)_Copy \[15\]]

[AN(68)_MemberFunction \[16\]]

[AN(79)_EvaluatedData \[17\]]

[AN(73)_Copy \[18\]]

[AN(45)_MemberFunction \[19\]]

[AN(56)_EvaluatedData \[20\]]

[AN(50)_Copy \[21\]]

[AN(22)_MemberFunction \[22\]]

[AN(33)_EvaluatedData \[23\]]

[AN(27)_Copy \[24\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[25\]]

[AN(9)_Create \[26\]]

[NULL \[27\]]

[AN(9)_Create \[26\]]-->Create[NULL \[27\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[25\]]-->MoveAndPlace[AN(9)_Create \[26\]]
[AN(27)_Copy \[24\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[25\]]
[AN(33)_EvaluatedData \[23\]]-->BinaryOperation[AN(27)_Copy \[24\]]
[AN(32)_Copy \[28\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[29\]]

[AN(7)_Create \[30\]]

[NULL \[31\]]

[AN(7)_Create \[30\]]-->Create[NULL \[31\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[29\]]-->MoveAndPlace[AN(7)_Create \[30\]]
[AN(32)_Copy \[28\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[29\]]
[AN(33)_EvaluatedData \[23\]]-->BinaryOperation[AN(32)_Copy \[28\]]
[AN(22)_MemberFunction \[22\]]-->MoveAndPlace[AN(33)_EvaluatedData \[23\]]
[AN(50)_Copy \[21\]]-->CopyLiteral[AN(22)_MemberFunction \[22\]]
[AN(56)_EvaluatedData \[20\]]-->BinaryOperation[AN(50)_Copy \[21\]]
[AN(55)_Copy \[32\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[33\]]

[AN(9)_Create \[34\]]

[NULL \[35\]]

[AN(9)_Create \[34\]]-->Create[NULL \[35\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[33\]]-->MoveAndPlace[AN(9)_Create \[34\]]
[AN(55)_Copy \[32\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[33\]]
[AN(56)_EvaluatedData \[20\]]-->BinaryOperation[AN(55)_Copy \[32\]]
[AN(45)_MemberFunction \[19\]]-->MoveAndPlace[AN(56)_EvaluatedData \[20\]]
[AN(73)_Copy \[18\]]-->CopyLiteral[AN(45)_MemberFunction \[19\]]
[AN(79)_EvaluatedData \[17\]]-->BinaryOperation[AN(73)_Copy \[18\]]
[AN(78)_Copy \[36\]]

[AN(22)_MemberFunction \[37\]]

[AN(33)_EvaluatedData \[38\]]

[AN(27)_Copy \[39\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[40\]]

[AN(9)_Create \[41\]]

[NULL \[42\]]

[AN(9)_Create \[41\]]-->Create[NULL \[42\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[40\]]-->MoveAndPlace[AN(9)_Create \[41\]]
[AN(27)_Copy \[39\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[40\]]
[AN(33)_EvaluatedData \[38\]]-->BinaryOperation[AN(27)_Copy \[39\]]
[AN(32)_Copy \[43\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[44\]]

[AN(7)_Create \[45\]]

[NULL \[46\]]

[AN(7)_Create \[45\]]-->Create[NULL \[46\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[44\]]-->MoveAndPlace[AN(7)_Create \[45\]]
[AN(32)_Copy \[43\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[44\]]
[AN(33)_EvaluatedData \[38\]]-->BinaryOperation[AN(32)_Copy \[43\]]
[AN(22)_MemberFunction \[37\]]-->MoveAndPlace[AN(33)_EvaluatedData \[38\]]
[AN(78)_Copy \[36\]]-->CopyLiteral[AN(22)_MemberFunction \[37\]]
[AN(79)_EvaluatedData \[17\]]-->BinaryOperation[AN(78)_Copy \[36\]]
[AN(68)_MemberFunction \[16\]]-->MoveAndPlace[AN(79)_EvaluatedData \[17\]]
[AN(96)_Copy \[15\]]-->CopyLiteral[AN(68)_MemberFunction \[16\]]
[AN(102)_EvaluatedData \[14\]]-->BinaryOperation[AN(96)_Copy \[15\]]
[AN(101)_Copy \[47\]]

[AN(45)_MemberFunction \[48\]]

[AN(56)_EvaluatedData \[49\]]

[AN(50)_Copy \[50\]]

[AN(22)_MemberFunction \[51\]]

[AN(33)_EvaluatedData \[52\]]

[AN(27)_Copy \[53\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[54\]]

[AN(9)_Create \[55\]]

[NULL \[56\]]

[AN(9)_Create \[55\]]-->Create[NULL \[56\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[54\]]-->MoveAndPlace[AN(9)_Create \[55\]]
[AN(27)_Copy \[53\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[54\]]
[AN(33)_EvaluatedData \[52\]]-->BinaryOperation[AN(27)_Copy \[53\]]
[AN(32)_Copy \[57\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[58\]]

[AN(7)_Create \[59\]]

[NULL \[60\]]

[AN(7)_Create \[59\]]-->Create[NULL \[60\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[58\]]-->MoveAndPlace[AN(7)_Create \[59\]]
[AN(32)_Copy \[57\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[58\]]
[AN(33)_EvaluatedData \[52\]]-->BinaryOperation[AN(32)_Copy \[57\]]
[AN(22)_MemberFunction \[51\]]-->MoveAndPlace[AN(33)_EvaluatedData \[52\]]
[AN(50)_Copy \[50\]]-->CopyLiteral[AN(22)_MemberFunction \[51\]]
[AN(56)_EvaluatedData \[49\]]-->BinaryOperation[AN(50)_Copy \[50\]]
[AN(55)_Copy \[61\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[62\]]

[AN(9)_Create \[63\]]

[NULL \[64\]]

[AN(9)_Create \[63\]]-->Create[NULL \[64\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[62\]]-->MoveAndPlace[AN(9)_Create \[63\]]
[AN(55)_Copy \[61\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[62\]]
[AN(56)_EvaluatedData \[49\]]-->BinaryOperation[AN(55)_Copy \[61\]]
[AN(45)_MemberFunction \[48\]]-->MoveAndPlace[AN(56)_EvaluatedData \[49\]]
[AN(101)_Copy \[47\]]-->CopyLiteral[AN(45)_MemberFunction \[48\]]
[AN(102)_EvaluatedData \[14\]]-->BinaryOperation[AN(101)_Copy \[47\]]
[AN(91)_MemberFunction \[13\]]-->MoveAndPlace[AN(102)_EvaluatedData \[14\]]
[AN(119)_Copy \[12\]]-->CopyLiteral[AN(91)_MemberFunction \[13\]]
[AN(125)_EvaluatedData \[11\]]-->BinaryOperation[AN(119)_Copy \[12\]]
[AN(124)_Copy \[65\]]

[AN(68)_MemberFunction \[66\]]

[AN(79)_EvaluatedData \[67\]]

[AN(73)_Copy \[68\]]

[AN(45)_MemberFunction \[69\]]

[AN(56)_EvaluatedData \[70\]]

[AN(50)_Copy \[71\]]

[AN(22)_MemberFunction \[72\]]

[AN(33)_EvaluatedData \[73\]]

[AN(27)_Copy \[74\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[75\]]

[AN(9)_Create \[76\]]

[NULL \[77\]]

[AN(9)_Create \[76\]]-->Create[NULL \[77\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[75\]]-->MoveAndPlace[AN(9)_Create \[76\]]
[AN(27)_Copy \[74\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[75\]]
[AN(33)_EvaluatedData \[73\]]-->BinaryOperation[AN(27)_Copy \[74\]]
[AN(32)_Copy \[78\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[79\]]

[AN(7)_Create \[80\]]

[NULL \[81\]]

[AN(7)_Create \[80\]]-->Create[NULL \[81\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[79\]]-->MoveAndPlace[AN(7)_Create \[80\]]
[AN(32)_Copy \[78\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[79\]]
[AN(33)_EvaluatedData \[73\]]-->BinaryOperation[AN(32)_Copy \[78\]]
[AN(22)_MemberFunction \[72\]]-->MoveAndPlace[AN(33)_EvaluatedData \[73\]]
[AN(50)_Copy \[71\]]-->CopyLiteral[AN(22)_MemberFunction \[72\]]
[AN(56)_EvaluatedData \[70\]]-->BinaryOperation[AN(50)_Copy \[71\]]
[AN(55)_Copy \[82\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[83\]]

[AN(9)_Create \[84\]]

[NULL \[85\]]

[AN(9)_Create \[84\]]-->Create[NULL \[85\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[83\]]-->MoveAndPlace[AN(9)_Create \[84\]]
[AN(55)_Copy \[82\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[83\]]
[AN(56)_EvaluatedData \[70\]]-->BinaryOperation[AN(55)_Copy \[82\]]
[AN(45)_MemberFunction \[69\]]-->MoveAndPlace[AN(56)_EvaluatedData \[70\]]
[AN(73)_Copy \[68\]]-->CopyLiteral[AN(45)_MemberFunction \[69\]]
[AN(79)_EvaluatedData \[67\]]-->BinaryOperation[AN(73)_Copy \[68\]]
[AN(78)_Copy \[86\]]

[AN(22)_MemberFunction \[87\]]

[AN(33)_EvaluatedData \[88\]]

[AN(27)_Copy \[89\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[90\]]

[AN(9)_Create \[91\]]

[NULL \[92\]]

[AN(9)_Create \[91\]]-->Create[NULL \[92\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[90\]]-->MoveAndPlace[AN(9)_Create \[91\]]
[AN(27)_Copy \[89\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[90\]]
[AN(33)_EvaluatedData \[88\]]-->BinaryOperation[AN(27)_Copy \[89\]]
[AN(32)_Copy \[93\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[94\]]

[AN(7)_Create \[95\]]

[NULL \[96\]]

[AN(7)_Create \[95\]]-->Create[NULL \[96\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[94\]]-->MoveAndPlace[AN(7)_Create \[95\]]
[AN(32)_Copy \[93\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[94\]]
[AN(33)_EvaluatedData \[88\]]-->BinaryOperation[AN(32)_Copy \[93\]]
[AN(22)_MemberFunction \[87\]]-->MoveAndPlace[AN(33)_EvaluatedData \[88\]]
[AN(78)_Copy \[86\]]-->CopyLiteral[AN(22)_MemberFunction \[87\]]
[AN(79)_EvaluatedData \[67\]]-->BinaryOperation[AN(78)_Copy \[86\]]
[AN(68)_MemberFunction \[66\]]-->MoveAndPlace[AN(79)_EvaluatedData \[67\]]
[AN(124)_Copy \[65\]]-->CopyLiteral[AN(68)_MemberFunction \[66\]]
[AN(125)_EvaluatedData \[11\]]-->BinaryOperation[AN(124)_Copy \[65\]]
[AN(114)_MemberFunction \[10\]]-->MoveAndPlace[AN(125)_EvaluatedData \[11\]]
[AN(142)_Copy \[9\]]-->CopyLiteral[AN(114)_MemberFunction \[10\]]
[AN(148)_EvaluatedData \[8\]]-->BinaryOperation[AN(142)_Copy \[9\]]
[AN(147)_Copy \[97\]]

[AN(91)_MemberFunction \[98\]]

[AN(102)_EvaluatedData \[99\]]

[AN(96)_Copy \[100\]]

[AN(68)_MemberFunction \[101\]]

[AN(79)_EvaluatedData \[102\]]

[AN(73)_Copy \[103\]]

[AN(45)_MemberFunction \[104\]]

[AN(56)_EvaluatedData \[105\]]

[AN(50)_Copy \[106\]]

[AN(22)_MemberFunction \[107\]]

[AN(33)_EvaluatedData \[108\]]

[AN(27)_Copy \[109\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[110\]]

[AN(9)_Create \[111\]]

[NULL \[112\]]

[AN(9)_Create \[111\]]-->Create[NULL \[112\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[110\]]-->MoveAndPlace[AN(9)_Create \[111\]]
[AN(27)_Copy \[109\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[110\]]
[AN(33)_EvaluatedData \[108\]]-->BinaryOperation[AN(27)_Copy \[109\]]
[AN(32)_Copy \[113\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[114\]]

[AN(7)_Create \[115\]]

[NULL \[116\]]

[AN(7)_Create \[115\]]-->Create[NULL \[116\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[114\]]-->MoveAndPlace[AN(7)_Create \[115\]]
[AN(32)_Copy \[113\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[114\]]
[AN(33)_EvaluatedData \[108\]]-->BinaryOperation[AN(32)_Copy \[113\]]
[AN(22)_MemberFunction \[107\]]-->MoveAndPlace[AN(33)_EvaluatedData \[108\]]
[AN(50)_Copy \[106\]]-->CopyLiteral[AN(22)_MemberFunction \[107\]]
[AN(56)_EvaluatedData \[105\]]-->BinaryOperation[AN(50)_Copy \[106\]]
[AN(55)_Copy \[117\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[118\]]

[AN(9)_Create \[119\]]

[NULL \[120\]]

[AN(9)_Create \[119\]]-->Create[NULL \[120\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[118\]]-->MoveAndPlace[AN(9)_Create \[119\]]
[AN(55)_Copy \[117\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[118\]]
[AN(56)_EvaluatedData \[105\]]-->BinaryOperation[AN(55)_Copy \[117\]]
[AN(45)_MemberFunction \[104\]]-->MoveAndPlace[AN(56)_EvaluatedData \[105\]]
[AN(73)_Copy \[103\]]-->CopyLiteral[AN(45)_MemberFunction \[104\]]
[AN(79)_EvaluatedData \[102\]]-->BinaryOperation[AN(73)_Copy \[103\]]
[AN(78)_Copy \[121\]]

[AN(22)_MemberFunction \[122\]]

[AN(33)_EvaluatedData \[123\]]

[AN(27)_Copy \[124\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[125\]]

[AN(9)_Create \[126\]]

[NULL \[127\]]

[AN(9)_Create \[126\]]-->Create[NULL \[127\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[125\]]-->MoveAndPlace[AN(9)_Create \[126\]]
[AN(27)_Copy \[124\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[125\]]
[AN(33)_EvaluatedData \[123\]]-->BinaryOperation[AN(27)_Copy \[124\]]
[AN(32)_Copy \[128\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[129\]]

[AN(7)_Create \[130\]]

[NULL \[131\]]

[AN(7)_Create \[130\]]-->Create[NULL \[131\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[129\]]-->MoveAndPlace[AN(7)_Create \[130\]]
[AN(32)_Copy \[128\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[129\]]
[AN(33)_EvaluatedData \[123\]]-->BinaryOperation[AN(32)_Copy \[128\]]
[AN(22)_MemberFunction \[122\]]-->MoveAndPlace[AN(33)_EvaluatedData \[123\]]
[AN(78)_Copy \[121\]]-->CopyLiteral[AN(22)_MemberFunction \[122\]]
[AN(79)_EvaluatedData \[102\]]-->BinaryOperation[AN(78)_Copy \[121\]]
[AN(68)_MemberFunction \[101\]]-->MoveAndPlace[AN(79)_EvaluatedData \[102\]]
[AN(96)_Copy \[100\]]-->CopyLiteral[AN(68)_MemberFunction \[101\]]
[AN(102)_EvaluatedData \[99\]]-->BinaryOperation[AN(96)_Copy \[100\]]
[AN(101)_Copy \[132\]]

[AN(45)_MemberFunction \[133\]]

[AN(56)_EvaluatedData \[134\]]

[AN(50)_Copy \[135\]]

[AN(22)_MemberFunction \[136\]]

[AN(33)_EvaluatedData \[137\]]

[AN(27)_Copy \[138\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[139\]]

[AN(9)_Create \[140\]]

[NULL \[141\]]

[AN(9)_Create \[140\]]-->Create[NULL \[141\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[139\]]-->MoveAndPlace[AN(9)_Create \[140\]]
[AN(27)_Copy \[138\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[139\]]
[AN(33)_EvaluatedData \[137\]]-->BinaryOperation[AN(27)_Copy \[138\]]
[AN(32)_Copy \[142\]]

[AN(8)_To(Register(0x6062) > Index(0)) \[143\]]

[AN(7)_Create \[144\]]

[NULL \[145\]]

[AN(7)_Create \[144\]]-->Create[NULL \[145\]]
[AN(8)_To(Register(0x6062) > Index(0)) \[143\]]-->MoveAndPlace[AN(7)_Create \[144\]]
[AN(32)_Copy \[142\]]-->CopyLiteral[AN(8)_To(Register(0x6062) > Index(0)) \[143\]]
[AN(33)_EvaluatedData \[137\]]-->BinaryOperation[AN(32)_Copy \[142\]]
[AN(22)_MemberFunction \[136\]]-->MoveAndPlace[AN(33)_EvaluatedData \[137\]]
[AN(50)_Copy \[135\]]-->CopyLiteral[AN(22)_MemberFunction \[136\]]
[AN(56)_EvaluatedData \[134\]]-->BinaryOperation[AN(50)_Copy \[135\]]
[AN(55)_Copy \[146\]]

[AN(10)_To(Register(0x6062) > Index(1)) \[147\]]

[AN(9)_Create \[148\]]

[NULL \[149\]]

[AN(9)_Create \[148\]]-->Create[NULL \[149\]]
[AN(10)_To(Register(0x6062) > Index(1)) \[147\]]-->MoveAndPlace[AN(9)_Create \[148\]]
[AN(55)_Copy \[146\]]-->CopyLiteral[AN(10)_To(Register(0x6062) > Index(1)) \[147\]]
[AN(56)_EvaluatedData \[134\]]-->BinaryOperation[AN(55)_Copy \[146\]]
[AN(45)_MemberFunction \[133\]]-->MoveAndPlace[AN(56)_EvaluatedData \[134\]]
[AN(101)_Copy \[132\]]-->CopyLiteral[AN(45)_MemberFunction \[133\]]
[AN(102)_EvaluatedData \[99\]]-->BinaryOperation[AN(101)_Copy \[132\]]
[AN(91)_MemberFunction \[98\]]-->MoveAndPlace[AN(102)_EvaluatedData \[99\]]
[AN(147)_Copy \[97\]]-->CopyLiteral[AN(91)_MemberFunction \[98\]]
[AN(148)_EvaluatedData \[8\]]-->BinaryOperation[AN(147)_Copy \[97\]]
[AN(137)_MemberFunction \[7\]]-->MoveAndPlace[AN(148)_EvaluatedData \[8\]]
[AN(160)_Copy \[6\]]-->CopyLiteral[AN(137)_MemberFunction \[7\]]
[AN(164)_Reference \[150\]]

[NULL \[151\]]

[AN(164)_Reference \[150\]]-->CreateReference[NULL \[151\]]
[fib \[152\]]

[y \[153\]]

[NULL \[154\]]

[y \[153\]]-->CreateVariable[NULL \[154\]]